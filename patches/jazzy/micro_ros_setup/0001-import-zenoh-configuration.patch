From 0f5e116d7bca53d144962fbab96745f2c5ddd68f Mon Sep 17 00:00:00 2001
From: Katsumi Yamazaki <v-yamazaki8668@esol.co.jp>
Date: Sat, 27 Jul 2024 19:37:49 +0900
Subject: [PATCH] import zenoh configuration.

change directory place for config files.

generate config/zenoh/raspbian.

bugfix : use rmw_zenoh_pico branch on rmw_zenoh_pico repository.

bugfix : use rmw_zenoh_pico branch on rmw_zenoh_pico repository. (No2)

Apply 1 suggestion(s) to 1 file(s)

Apply 1 suggestion(s) to 1 file(s)

Apply 1 suggestion(s) to 1 file(s)

update build option for rmw_zenoh_pico with zenoh 1.x.

update patch for zenoh-pico

changed base zenoh_pico version since rmw_zenoh 0.2.4

update debug environment.

delete duplicate repository entry.

[Bugfix] Unable to apply zenoh-pico patch when building rmw_zneoh_pico for raspi

share patch files between platformIO.

update zenoh-pico for 1.4.0

read rmw_zenoh_pico.repos from repository of rmw_zenoh_pico. (host)

read rmw_zenoh_pico.repos from repository of rmw_zenoh_pico. (raspbian)

update build script for host.

delete local patch for rcutils.

update build script for host.(No2)

append mcast entry.

append option of FEATURE_INTEREST for zenoh_pico.
---
 CMakeLists.txt                                |   2 +-
 config/raspbian/generic/create.sh             |   4 +-
 config/zenoh/client_ros2_packages.txt         |   2 +
 config/zenoh/dev_ros2_packages.txt            |   9 +
 config/zenoh/dev_uros_packages.repos          |   1 +
 config/zenoh/host/build.sh                    |  84 ++++++++
 config/zenoh/host/client-host-colcon.meta     |  42 ++++
 config/zenoh/host/client_host_packages.repos  |  58 ++++++
 config/zenoh/host/create.sh                   |  41 ++++
 config/zenoh/host/flash.sh                    |   2 +
 config/zenoh/host/package.xml                 |  18 ++
 config/zenoh/raspbian/build.sh                |  19 ++
 config/zenoh/raspbian/client-colcon.meta      |   1 +
 .../zenoh/raspbian/client_uros_packages.repos |   1 +
 config/zenoh/raspbian/configure.sh            | 191 ++++++++++++++++++
 config/zenoh/raspbian/create.sh               |  27 +++
 config/zenoh/raspbian/flash.sh                |   4 +
 config/zenoh/raspbian/supported_platforms     |   1 +
 scripts/build_firmware.sh                     |   3 +-
 scripts/clean_env.sh                          |  10 +-
 scripts/configure_firmware.sh                 |   3 +-
 scripts/create_agent_ws.sh                    |   2 +-
 scripts/create_firmware_ws.sh                 |  18 +-
 23 files changed, 525 insertions(+), 18 deletions(-)
 create mode 100644 config/zenoh/client_ros2_packages.txt
 create mode 100644 config/zenoh/dev_ros2_packages.txt
 create mode 100644 config/zenoh/dev_uros_packages.repos
 create mode 100755 config/zenoh/host/build.sh
 create mode 100644 config/zenoh/host/client-host-colcon.meta
 create mode 100644 config/zenoh/host/client_host_packages.repos
 create mode 100755 config/zenoh/host/create.sh
 create mode 100755 config/zenoh/host/flash.sh
 create mode 100644 config/zenoh/host/package.xml
 create mode 100755 config/zenoh/raspbian/build.sh
 create mode 100644 config/zenoh/raspbian/client-colcon.meta
 create mode 100644 config/zenoh/raspbian/client_uros_packages.repos
 create mode 100755 config/zenoh/raspbian/configure.sh
 create mode 100755 config/zenoh/raspbian/create.sh
 create mode 100644 config/zenoh/raspbian/flash.sh
 create mode 100644 config/zenoh/raspbian/supported_platforms

diff --git a/CMakeLists.txt b/CMakeLists.txt
index fa2997a..a3b133d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,7 +12,7 @@ if(NOT CMAKE_CXX_STANDARD)
 endif()
 
 if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
-  add_compile_options(-Wall -Wextra -Wpedantic)
+  add_compile_options(-Wall -Wextra -Wpedantic -Wno-missing-field-initializers)
 endif()
 
 # find dependencies
diff --git a/config/raspbian/generic/create.sh b/config/raspbian/generic/create.sh
index 01528a4..f6d6729 100755
--- a/config/raspbian/generic/create.sh
+++ b/config/raspbian/generic/create.sh
@@ -6,7 +6,7 @@ pushd $FW_TARGETDIR/$DEV_WS_DIR >/dev/null
     elif [ $PLATFORM == "buster_v7" ]; then
         TOOLCHAIN_URL="https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Buster/GCC%208.3.0/Raspberry%20Pi%202%2C%203/cross-gcc-8.3.0-pi_2-3.tar.gz/download"
     elif [ $PLATFORM == "buster_v8" ]; then
-        TOOLCHAIN_URL="https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Buster/GCC%208.3.0/Raspberry%20Pi%203A%2B%2C%203B%2B%2C%204/cross-gcc-8.3.0-pi_3%2B.tar.gz/download"
+	TOOLCHAIN_URL="https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Buster/GCC%208.3.0/Raspberry%20Pi%202%2C%203/cross-gcc-8.3.0-pi_2-3.tar.gz/download"
     else
         echo "Platform not supported."
         exit 1
@@ -19,4 +19,4 @@ popd >/dev/null
 
 pushd $FW_TARGETDIR >/dev/null
     git clone -b jazzy https://github.com/micro-ROS/raspbian_apps.git
-popd >/dev/null
\ No newline at end of file
+popd >/dev/null
diff --git a/config/zenoh/client_ros2_packages.txt b/config/zenoh/client_ros2_packages.txt
new file mode 100644
index 0000000..07de46c
--- /dev/null
+++ b/config/zenoh/client_ros2_packages.txt
@@ -0,0 +1,2 @@
+keep:
+  none
diff --git a/config/zenoh/dev_ros2_packages.txt b/config/zenoh/dev_ros2_packages.txt
new file mode 100644
index 0000000..c04d6a1
--- /dev/null
+++ b/config/zenoh/dev_ros2_packages.txt
@@ -0,0 +1,9 @@
+keep:
+  ament/ament_cmake
+  ament/ament_index
+  ament/ament_lint
+  ament/ament_package
+  ament/googletest
+  ament/osrf_pycommon
+  ament/uncrustify_vendor
+  ros2/ament_cmake_ros
diff --git a/config/zenoh/dev_uros_packages.repos b/config/zenoh/dev_uros_packages.repos
new file mode 100644
index 0000000..56f46b6
--- /dev/null
+++ b/config/zenoh/dev_uros_packages.repos
@@ -0,0 +1 @@
+repositories:
diff --git a/config/zenoh/host/build.sh b/config/zenoh/host/build.sh
new file mode 100755
index 0000000..f3c6efc
--- /dev/null
+++ b/config/zenoh/host/build.sh
@@ -0,0 +1,84 @@
+#!/bin/bash
+
+echo build rosidl_typesupport_microxrcedds_c ...
+colcon build --packages-up-to rosidl_typesupport_microxrcedds_c --metas src \
+       --cmake-args \
+       -DBUILD_TESTING=OFF \
+       -DBUILD_SHARED_LIBS=ON \
+       $@
+
+set +o nounset
+. install/local_setup.bash
+set -o nounset
+
+echo build micro-ros ...
+colcon build --metas src --packages-ignore zenohpico rmw_zenoh_pico \
+       --cmake-args \
+       -DBUILD_TESTING=OFF \
+       -DBUILD_SHARED_LIBS=ON \
+       --allow-overriding \
+       action_msgs \
+       builtin_interfaces \
+       common_interfaces \
+       composition_interfaces \
+       example_interfaces \
+       geometry_msgs \
+       lifecycle_msgs \
+       nav_msgs \
+       rcl_interfaces \
+       rclc rclc_parameter \
+       rosgraph_msgs \
+       sensor_msgs \
+       sensor_msgs_py \
+       service_msgs \
+       statistics_msgs \
+       std_msgs \
+       std_srvs \
+       test_interface_files \
+       test_msgs \
+       type_description_interfaces \
+       unique_identifier_msgs \
+       visualization_msgs \
+       $@
+
+echo build rmw_zenoh_pico ...
+
+case "${CONNECT_TYPE}" in
+    "unicast")
+	ZENOH_PICO_BUILD_ARG=""
+
+	if [ "$FEATURE_INTEREST" == "on" ] ; then
+	    ZENOH_PICO_BUILD_ARG+="-DZ_FEATURE_INTEREST=1"
+	else
+	    ZENOH_PICO_BUILD_ARG+="-DZ_FEATURE_INTEREST=0"
+	fi
+
+	colcon build --metas src --packages-select zenohpico \
+	       --cmake-args \
+	       -DBUILD_SHARED_LIBS=ON \
+	       ${ZENOH_PICO_BUILD_ARG} \
+	       $@
+
+	colcon build --metas src --packages-select rmw_zenoh_pico \
+	       --cmake-args \
+	       -DBUILD_TESTING=OFF \
+	       -DBUILD_SHARED_LIBS=ON \
+	       -DRMW_ZENOH_PICO_TRANSPORT_TYPE=${CONNECT_TYPE} \
+	       -DRMW_ZENOH_PICO_CONNECT=${CONNECT_IP} \
+	       -DRMW_ZENOH_PICO_CONNECT_PORT=${CONNECT_PORT} \
+	       -DRMW_ZENOH_PICO_LISTEN=${LISTEN_IP} \
+	       -DRMW_ZENOH_PICO_LISTEN_PORT=${LISTEN_PORT} \
+	       $@
+	;;
+    "mcast")
+	colcon build --metas src --packages-select zenohpico rmw_zenoh_pico \
+	       --cmake-args \
+	       -DBUILD_TESTING=OFF \
+	       -DBUILD_SHARED_LIBS=ON \
+	       -DRMW_ZENOH_PICO_TRANSPORT_TYPE=${CONNECT_TYPE} \
+	       -DRMW_ZENOH_PICO_MCAST=${MCAST_IP} \
+	       -DRMW_ZENOH_PICO_MCAST_PORT=${MCAST_PORT} \
+	       -DRMW_ZENOH_PICO_MCAST_DEV=${MCAST_DEV} \
+	       $@
+	;;
+esac
diff --git a/config/zenoh/host/client-host-colcon.meta b/config/zenoh/host/client-host-colcon.meta
new file mode 100644
index 0000000..d5f37c4
--- /dev/null
+++ b/config/zenoh/host/client-host-colcon.meta
@@ -0,0 +1,42 @@
+{
+    "names":{
+        "microcdr":{
+            "cmake-args":[
+                "-DBUILD_SHARED_LIBS=ON"
+            ]
+        },
+        "rosidl_typesupport_microxrcedds_c":{
+            "cmake-args":[
+                "-DBUILD_SHARED_LIBS=ON"
+            ]
+        },
+        "rosidl_typesupport_microxrcedds_cpp":{
+            "cmake-args":[
+                "-DBUILD_SHARED_LIBS=ON"
+            ]
+        },
+        "rclc_parameter":{
+            "cmake-args":[
+                "-DBUILD_SHARED_LIBS=ON"
+            ]
+        },
+        "rcutils":{
+            "cmake-args":[
+                "-DENABLE_TESTING=ON"
+            ]
+        },
+        "rmw_zenoh_pico":{
+            "cmake-args":[
+                "-DBUILD_DEMO=ON"
+            ]
+        },
+        "zenohpico":{
+            "cmake-args":[
+                "-DBUILD_TESTING=OFF",
+                "-DBUILD_EXAMPLES=OFF",
+                "-DBATCH_UNICAST_SIZE=1024",
+                "-DFRAG_MAX_SIZE=2048"
+            ]
+        },
+    }
+}
diff --git a/config/zenoh/host/client_host_packages.repos b/config/zenoh/host/client_host_packages.repos
new file mode 100644
index 0000000..44a3952
--- /dev/null
+++ b/config/zenoh/host/client_host_packages.repos
@@ -0,0 +1,58 @@
+repositories:
+  eProsima/Micro-CDR:
+    type: git
+    url: https://github.com/eProsima/Micro-CDR.git
+    version: ros2
+
+# MicroROS
+
+  uros/rclc:
+    type: git
+    url: https://github.com/ros2/rclc.git
+    version: master
+  uros/micro_ros_msgs:
+    type: git
+    url: https://github.com/micro-ROS/micro_ros_msgs.git
+    version: jazzy
+  uros/rosidl_typesupport_microxrcedds:
+    type: git
+    url: https://github.com/micro-ROS/rosidl_typesupport_microxrcedds.git
+    version: jazzy
+  uros/micro_ros_utilities:
+    type: git
+    url: https://github.com/micro-ROS/micro_ros_utilities
+    version: jazzy
+
+# Required messages packages
+
+  ros2/common_interfaces:
+    type: git
+    url: https://github.com/ros2/common_interfaces
+    version: jazzy
+
+  ros2/example_interfaces:
+    type: git
+    url: https://github.com/ros2/example_interfaces
+    version: jazzy
+
+  ros2/rcl_interfaces:
+    type: git
+    url: https://github.com/ros2/rcl_interfaces
+    version: jazzy
+
+  ros2/unique_identifier_msgs:
+    type: git
+    url: https://github.com/ros2/unique_identifier_msgs
+    version: jazzy
+
+  ros2/test_interface_files:
+    type: git
+    url: https://github.com/ros2/test_interface_files
+    version: jazzy
+
+# rmw_zenoh_pico
+
+  # uros/zenohpico:
+  #   type: git
+  #   url: https://github.com/eclipse-zenoh/zenoh-pico.git
+  #   version: develop_1.3.1
diff --git a/config/zenoh/host/create.sh b/config/zenoh/host/create.sh
new file mode 100755
index 0000000..257ff96
--- /dev/null
+++ b/config/zenoh/host/create.sh
@@ -0,0 +1,41 @@
+# populate the workspace
+mkdir -p src
+
+echo ros2 run micro_ros_setup create_ws.sh src $PREFIX/config/$RTOS/client_ros2_packages.txt $PREFIX/config/$RTOS/$PLATFORM/client_host_packages.repos
+
+ros2 run micro_ros_setup create_ws.sh src $PREFIX/config/$RTOS/client_ros2_packages.txt $PREFIX/config/$RTOS/$PLATFORM/client_host_packages.repos
+
+# add appropriate colcon.meta
+cp $PREFIX/config/$RTOS/$PLATFORM/client-host-colcon.meta src/colcon.meta
+
+rosdep install -y --from-paths src -i src --skip-keys="$SKIP" -r
+
+touch src/uros/rclc/rclc_examples/COLCON_IGNORE
+touch src/uros/rclc/rclc_lifecycle/COLCON_IGNORE
+
+# get rmw_zenoh_pico repository from local strage
+if [ ! -v RMW_ZENOH_PICO_PATH ] ; then
+    git clone https://github.com/esol-community/rmw_zenoh_pico -b jazzy src/uros/rmw_zenoh_pico
+else
+    git clone $RMW_ZENOH_PICO_PATH src/uros/rmw_zenoh_pico
+fi
+
+vcs import --input src/uros/rmw_zenoh_pico/rmw_zenoh_pico.repos src/uros || true
+
+# copy demo application
+cp -a src/uros/rmw_zenoh_pico/examples/microros/app src/uros/rmw_zenoh_pico/rmw_zenoh_pico/.
+cp -a src/uros/rmw_zenoh_pico/examples/microros/host/* src/uros/rmw_zenoh_pico/rmw_zenoh_pico/app/.
+
+# local patches (2025.05.25)
+
+if [ -d src/uros/rmw_zenoh_pico/patches/${ROS_DISTRO}/zenohpico ] ; then
+    echo apply patch for zenohpico
+    git apply --directory=src/uros/zenohpico \
+	src/uros/rmw_zenoh_pico/patches/${ROS_DISTRO}/zenohpico/* || true
+fi
+
+if [ -d src/uros/rmw_zenoh_pico/patches/${ROS_DISTRO}/rosidl_typesupport_microxrcedds ] ; then
+    echo apply patch for rosidl_typesupport_microxrcedds
+    git apply --directory=src/uros/rosidl_typesupport_microxrcedds \
+	src/uros/rmw_zenoh_pico/patches/${ROS_DISTRO}/rosidl_typesupport_microxrcedds/* || true
+fi
diff --git a/config/zenoh/host/flash.sh b/config/zenoh/host/flash.sh
new file mode 100755
index 0000000..948361b
--- /dev/null
+++ b/config/zenoh/host/flash.sh
@@ -0,0 +1,2 @@
+echo "Nothing to flash: running in host mode"
+echo "Use 'RMW_IMPLEMENTATION=rmw_microxrcedds ros2 run micro_ros_demos_rcl int32_subscriber' to start with examples"
\ No newline at end of file
diff --git a/config/zenoh/host/package.xml b/config/zenoh/host/package.xml
new file mode 100644
index 0000000..a420aa6
--- /dev/null
+++ b/config/zenoh/host/package.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0"?>
+<?xml-model href="http://download.ros.org/schema/package_format2.xsd" schematypens="http://www.w3.org/2001/XMLSchema"?>
+<package format="2">
+  <name>firmware</name>
+  <version>0.0.0</version>
+  <description>Micro-ROS dependecies for host platforms using rmw_zenoh and zenoh-pico</description>
+  <maintainer email="v-yamazaki8668@esol.co.jp">Katsumi Yamazaki</maintainer>
+  <maintainer email="k-yokoyama@esol.co.jp">Koichiro Yokoyama</maintainer>
+  <license>APL2</license>
+
+  <depend>file</depend>
+
+  <build_depend>log4cxx</build_depend>
+  <build_depend>clang</build_depend>
+  <build_depend>clang-tidy</build_depend>
+  <build_depend>clang-format</build_depend>
+
+</package>
diff --git a/config/zenoh/raspbian/build.sh b/config/zenoh/raspbian/build.sh
new file mode 100755
index 0000000..6624a11
--- /dev/null
+++ b/config/zenoh/raspbian/build.sh
@@ -0,0 +1,19 @@
+#! /bin/bash
+
+pushd $FW_TARGETDIR/mcu_ws >/dev/null
+    source app_info.sh
+    PATH=$PWD/../dev_ws/xcompiler/bin:$PATH
+    LD_LIBRARY_PATH=$PWD/../dev_ws/xcompiler/lib:$PWD/../dev_ws/xcompiler/arm-linux-gnueabihf/lib
+    colcon build --packages-up-to=$APP_PACKAGE_NAME --merge-install --cmake-force-configure \
+        --packages-ignore-regex=.*_cpp \
+        --cmake-args \
+	    -DRCUTILS_NO_FILESYSTEM=ON \
+            -DCMAKE_TOOLCHAIN_FILE=$PWD/toolchain.cmake \
+            -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
+            -DBUILD_SHARED_LIBS=OFF \
+            -DBUILD_TESTING=OFF \
+	    -DBUILD_DEMO=OFF \
+            "--no-warn-unused-cli"
+
+    find ./install -executable -type f -name $APP_BINARY_NAME -exec cp {} $FW_TARGETDIR/bin/$APP_OUTPUT_NAME \;
+popd >/dev/null
diff --git a/config/zenoh/raspbian/client-colcon.meta b/config/zenoh/raspbian/client-colcon.meta
new file mode 100644
index 0000000..9e26dfe
--- /dev/null
+++ b/config/zenoh/raspbian/client-colcon.meta
@@ -0,0 +1 @@
+{}
\ No newline at end of file
diff --git a/config/zenoh/raspbian/client_uros_packages.repos b/config/zenoh/raspbian/client_uros_packages.repos
new file mode 100644
index 0000000..56f46b6
--- /dev/null
+++ b/config/zenoh/raspbian/client_uros_packages.repos
@@ -0,0 +1 @@
+repositories:
diff --git a/config/zenoh/raspbian/configure.sh b/config/zenoh/raspbian/configure.sh
new file mode 100755
index 0000000..45d26f8
--- /dev/null
+++ b/config/zenoh/raspbian/configure.sh
@@ -0,0 +1,191 @@
+#! /bin/bash
+
+. $PREFIX/config/utils.sh
+
+function help {
+      echo "Configure script need an argument."
+      echo "   --transport -t       unicast or serial"
+      echo "   --dev -d             connect zenohd string descriptor in a serial-like transport"
+      echo "   --ip -i              connect zenohd IP in a network-like transport or serial option"
+      echo "   --port -p            connect zenohd port in a network-like transport"
+}
+
+pushd $FW_TARGETDIR >/dev/null
+
+    # get raspbian_apps repository from local strage
+    git clone -b jazzy https://github.com/micro-ROS/raspbian_apps.git
+
+    rm -rf mcu_ws/*
+    cp raspbian_apps/toolchain.cmake mcu_ws/
+
+    mkdir mcu_ws/uros

+
+    # get rmw_zenoh_pico repository from local strage
+    if [ ! -v RMW_ZENOH_PICO_PATH ] ; then
+        git clone -b main https://github.com/esol-community/rmw_zenoh_pico.git mcu_ws/uros/rmw_zenoh_pico
+    else
+        git clone $RMW_ZENOH_PICO_PATH mcu_ws/uros/rmw_zenoh_pico
+    fi
+
+    cp -a mcu_ws/uros/rmw_zenoh_pico/examples/microros/uros/* raspbian_apps/
+
+    # get zenoh_pico repository from local strage
+    vcs import --input mcu_ws/uros/rmw_zenoh_pico/rmw_zenoh_pico.repos mcu_ws/uros || true
+
+    curl -s https://raw.githubusercontent.com/ros2/ros2/jazzy/ros2.repos |\
+        ros2 run micro_ros_setup yaml_filter.py raspbian_apps/$CONFIG_NAME/ros2_repos.filter > ros2.repos
+    vcs import --input ros2.repos mcu_ws/ && rm ros2.repos
+
+    if [ -d mcu_ws/ros2/rosidl ]; then
+        touch mcu_ws/ros2/rosidl/rosidl_typesupport_introspection_c/COLCON_IGNORE
+        touch mcu_ws/ros2/rosidl/rosidl_typesupport_introspection_cpp/COLCON_IGNORE
+    fi
+
+    vcs import --input raspbian_apps/$CONFIG_NAME/app.repos mcu_ws/
+    if [ -d raspbian_apps/$CONFIG_NAME/app ]; then
+        cp -r raspbian_apps/$CONFIG_NAME/app mcu_ws/
+	cp -a mcu_ws/uros/rmw_zenoh_pico/examples/microros/app/$CONFIG_NAME/* mcu_ws/app/.
+    fi
+    cp raspbian_apps/$CONFIG_NAME/colcon.meta mcu_ws/
+    cp raspbian_apps/$CONFIG_NAME/app_info.sh mcu_ws/
+
+    # local patches (2025.05.25)
+    if [ -d mcu_ws/uros/rmw_zenoh_pico/patches/${ROS_DISTRO}/zenohpico ] ; then
+	echo apply zenohpico patch...
+	pushd mcu_ws/uros/zenohpico > /dev/null
+        git apply ${FW_TARGETDIR}/mcu_ws/uros/rmw_zenoh_pico/patches/${ROS_DISTRO}/zenohpico/* || true
+	popd > /dev/null
+    fi
+
+    if [ -d mcu_ws/uros/rmw_zenoh_pico/patches/${ROS_DISTRO}/rosidl_typesupport_microxrcedds ] ; then
+	echo apply rosidl_typesupport_microxrcedds...
+	pushd mcu_ws/uros/rosidl_typesupport_microxrcedds > /dev/null
+        git apply ${FW_TARGETDIR}/mcu_ws/uros/rmw_zenoh_pico/patches/${ROS_DISTRO}/rosidl_typesupport_microxrcedds/* || true
+	popd > /dev/null
+    fi
+
+    # import application program
+    if [ -d bin ]; then
+        rm -rf bin/*
+    else
+        mkdir -p bin
+    fi
+    if [ -d raspbian_apps/$CONFIG_NAME/bin ]; then
+        cp -r raspbian_apps/$CONFIG_NAME/bin mcu_ws/
+    fi
+popd >/dev/null
+
+# update configure for cmake parameter
+if [ "$UROS_TRANSPORT" == "unicast" ]; then
+    echo UROS_TRANSPORT   : $UROS_TRANSPORT
+    echo UROS_AGENT_PORT  : $UROS_AGENT_PORT
+    echo UROS_AGENT_IP    : $UROS_AGENT_IP
+    echo LISTEN_IP        : $LISTEN_IP
+    echo CONNECT_IP       : $CONNECT_IP
+    echo CONNECT_PORT     : $CONNECT_PORT
+    echo FEATURE_INTEREST : $FEATURE_INTEREST
+
+    update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_TRANSPORT_TYPE="$UROS_TRANSPORT
+
+    if [ -n "$LISTEN_PORT" ] ; then
+        update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_LISTEN_PORT="$LISTEN_PORT
+    fi
+
+    if [ -n "$LISTEN_IP" ] ; then
+        update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_LISTEN="$LISTEN_IP
+    fi
+
+    if [ -n "$UROS_AGENT_PORT" ]; then
+        update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_CONNECT_PORT="$UROS_AGENT_PORT
+    else
+	if [ -n "$CONNECT_IP" ]; then
+            update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_CONNECT_PORT="$CONNECT_IP
+	fi
+    fi
+
+    if [ -n "$UROS_AGENT_IP" ]; then
+        update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_CONNECT="$UROS_AGENT_IP
+    else
+	if [ -n "$CONNECT_PORT" ]; then
+            update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_CONNECT="$CONNECT_PORT
+	fi
+    fi
+
+    if [ "$FEATURE_INTEREST" == "on" ]; then
+        update_meta "zenohpico" "Z_FEATURE_INTEREST=1"
+    else
+        update_meta "zenohpico" "Z_FEATURE_INTEREST=0"
+    fi
+
+    echo "Configured $UROS_TRANSPORT mode for zenoh-pico"
+
+elif [ "$UROS_TRANSPORT" == "mcast" ]; then
+
+    echo UROS_TRANSPORT    : $UROS_TRANSPORT
+    echo UROS_AGENT_PORT   : $UROS_AGENT_PORT
+    echo UROS_AGENT_DEVICE : $UROS_AGENT_DEVICE
+    echo UROS_AGENT_IP     : $UROS_AGENT_IP
+    echo MCAST_PORT        : $MCAST_PORT
+    echo MCAST_IP          : $MCAST_IP
+    echo MCAST_DEV         : $MCAST_DEV
+
+    update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_TRANSPORT_TYPE="$UROS_TRANSPORT
+
+    if [ -n "$UROS_AGENT_DEVICE" ] ; then
+	update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_MCAST_DEV="$UROS_AGENT_DEVICE
+    else
+	if [ -n "$MCAST_DEV" ]; then
+	    update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_MCAST_DEV="$MCAST_DEV
+	fi
+    fi
+
+    if [ -n "$UROS_AGENT_PORT" ]; then
+	update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_MCAST_PORT="$UROS_AGENT_PORT
+    else
+	if [ -n "$MCAST_PORT" ]; then
+	    update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_MCAST_PORT="$MCAST_PORT
+	fi
+    fi
+
+    if [ -n "$UROS_AGENT_IP" ]; then
+	update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_MCAST="$UROS_AGENT_IP
+    else
+	if [ -n "$MCAST_IP" ]; then
+	    update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_MCAST="$MCAST_IP
+	fi
+    fi
+
+echo "Configured $UROS_TRANSPORT mode for zenoh-pico"
+
+elif [ "$UROS_TRANSPORT" == "serial" ]; then
+
+    echo UROS_TRANSPORT    : $UROS_TRANSPORT
+    echo UROS_AGENT_PORT   : $UROS_AGENT_PORT
+    echo UROS_AGENT_DEVICE : $UROS_AGENT_DEVICE
+    echo SERIAL_DEVICE     : $SERIAL_DEVICE
+    echo SERIAL_PARAM      : $SERIAL_PARAM
+
+    update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_TRANSPORT_TYPE="$UROS_TRANSPORT
+
+    if [ -n "$UROS_AGENT_DEVICE" ] ;then
+	update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_SERIAL_DEVICE="$UROS_AGENT_DEVICE
+    else
+	if [ -n "$SERIAL_DEVICE" ]; then
+	    update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_SERIAL_DEVICE="$SERIAL_DEVICE
+	fi
+    fi
+
+    if [ -n "$UROS_AGENT_PORT" ]; then
+	update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_SERIAL_PARAM="$UROS_AGENT_PORT
+    else
+	if [ -n "$SERIAL_PARAM" ]; then
+	    update_meta "rmw_zenoh_pico" "RMW_ZENOH_PICO_SERIAL_PARAM="$SERIAL_PARAM
+	fi
+    fi
+
+    echo "Configured $UROS_TRANSPORT mode for zenoh-pico"
+
+else
+    help
+    exit 1
+fi
diff --git a/config/zenoh/raspbian/create.sh b/config/zenoh/raspbian/create.sh
new file mode 100755
index 0000000..3be5014
--- /dev/null
+++ b/config/zenoh/raspbian/create.sh
@@ -0,0 +1,27 @@
+#! /bin/bash
+
+pushd $FW_TARGETDIR/$DEV_WS_DIR >/dev/null
+    if [ "$OPTION" == "bookworm_v12" ]; then
+        TOOLCHAIN_URL="https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Bookworm/GCC%2012.2.0/Raspberry%20Pi%201%2C%20Zero/cross-gcc-12.2.0-pi_0-1.tar.gz/download"
+    elif [ "$OPTION" == "bookworm_v13" ]; then
+        TOOLCHAIN_URL="https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Bookworm/GCC%2013.3.0/Raspberry%20Pi%201%2C%20Zero/cross-gcc-13.3.0-pi_0-1.tar.gz/download"
+    elif [ "$OPTION" == "bookworm_v14" ]; then
+        TOOLCHAIN_URL="https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Bookworm/GCC%2014.2.0/Raspberry%20Pi%201%2C%20Zero/cross-gcc-14.2.0-pi_0-1.tar.gz/download"
+    else
+        echo "Platform not supported."
+        exit 1
+    fi
+
+    if [ ! -d xcompiler ]; then
+	if [ -e $HOME/xcompiler.tar.gz ] ; then
+	    cp -a $HOME/xcompiler.tar.gz .
+	fi
+
+        if [ ! -e xcompiler.tar.gz ]; then
+            curl -o xcompiler.tar.gz -L $TOOLCHAIN_URL
+        fi
+        mkdir xcompiler
+        tar xf xcompiler.tar.gz -C xcompiler --strip-components 1
+        touch xcompiler/COLCON_IGNORE
+    fi
+popd >/dev/null
diff --git a/config/zenoh/raspbian/flash.sh b/config/zenoh/raspbian/flash.sh
new file mode 100644
index 0000000..e4384ba
--- /dev/null
+++ b/config/zenoh/raspbian/flash.sh
@@ -0,0 +1,4 @@
+#! /bin/bash
+
+source $FW_TARGETDIR/mcu_ws/app_info.sh
+echo "Copy $FW_TARGETDIR/bin/$APP_OUTPUT_NAME into your RPi."
\ No newline at end of file
diff --git a/config/zenoh/raspbian/supported_platforms b/config/zenoh/raspbian/supported_platforms
new file mode 100644
index 0000000..8091aec
--- /dev/null
+++ b/config/zenoh/raspbian/supported_platforms
@@ -0,0 +1 @@
+bookworm_v12
diff --git a/scripts/build_firmware.sh b/scripts/build_firmware.sh
index 96a2c86..bab11b6 100755
--- a/scripts/build_firmware.sh
+++ b/scripts/build_firmware.sh
@@ -60,7 +60,7 @@ fi
 . $(dirname $0)/clean_env.sh
 
 # source dev_ws
-if [ $RTOS != "host" ]; then
+if [ "$RTOS" != "host" ] && [ "$PLATFORM" != "host" ] ; then
     set +o nounset
     . $FW_TARGETDIR/dev_ws/install/setup.bash
     set -o nounset
@@ -75,4 +75,3 @@ if [ -d "$PREFIX/config/$RTOS/generic" ]; then
 else
     . $PREFIX/config/$RTOS/$PLATFORM/build.sh
 fi
-
diff --git a/scripts/clean_env.sh b/scripts/clean_env.sh
index 7ac5b4c..852e615 100644
--- a/scripts/clean_env.sh
+++ b/scripts/clean_env.sh
@@ -14,14 +14,14 @@ function clean {
       grep -v -E "($(echo $PREFIXES_TO_CLEAN | sed 's/:/\|/g'))" ) | sed 's/ /:/g' )
 }
 
-if [ $RTOS == "host" ]; then
+if [ "$RTOS" == "host" ] || [ "$PLATFORM" == "host" ] ; then
   echo "Compiling for host environment: not cleaning path"
 else
   echo "Crosscompiled environment: cleaning path"
   if [ ! -z ${LD_LIBRARY_PATH+x} ]
   then
     MRS_TEMP_VAR=$(clean $LD_LIBRARY_PATH)
-    if [ ! -z "$MRS_TEMP_VAR" ]  
+    if [ ! -z "$MRS_TEMP_VAR" ]
     then
       export LD_LIBRARY_PATH=$MRS_TEMP_VAR
     else
@@ -32,7 +32,7 @@ else
   if [ ! -z ${CMAKE_PREFIX_PATH+x} ]
   then
     MRS_TEMP_VAR=$(clean $CMAKE_PREFIX_PATH)
-    if [ ! -z "$MRS_TEMP_VAR" ]  
+    if [ ! -z "$MRS_TEMP_VAR" ]
     then
       export CMAKE_PREFIX_PATH=$MRS_TEMP_VAR
     else
@@ -43,7 +43,7 @@ else
   if [ ! -z ${PYTHONPATH+x} ]
   then
     MRS_TEMP_VAR=$(clean $PYTHONPATH)
-    if [ ! -z "$MRS_TEMP_VAR" ]  
+    if [ ! -z "$MRS_TEMP_VAR" ]
     then
       export PYTHONPATH=$MRS_TEMP_VAR
     else
@@ -54,4 +54,4 @@ else
   export PATH=$(clean $PATH)
   unset AMENT_PREFIX_PATH
   unset COLCON_PREFIX_PATH
-fi
\ No newline at end of file
+fi
diff --git a/scripts/configure_firmware.sh b/scripts/configure_firmware.sh
index 467710e..2dfa38e 100755
--- a/scripts/configure_firmware.sh
+++ b/scripts/configure_firmware.sh
@@ -79,6 +79,8 @@ while [[ $# -gt 0 ]]; do
   esac
 done
 
+export RTOS
+export PLATFORM
 # Configure specific firmware folder if needed
 if [ -d "$PREFIX/config/$RTOS/generic" ]; then
     echo "Configuring firmware for $RTOS platform $PLATFORM"
@@ -87,4 +89,3 @@ else
     echo "Configuring firmware for $RTOS platform $PLATFORM"
     exec $PREFIX/config/$RTOS/$PLATFORM/configure.sh $@
 fi
-
diff --git a/scripts/create_agent_ws.sh b/scripts/create_agent_ws.sh
index 2359467..400d953 100755
--- a/scripts/create_agent_ws.sh
+++ b/scripts/create_agent_ws.sh
@@ -23,4 +23,4 @@ fi
 # populate the workspace
 ros2 run micro_ros_setup create_ws.sh $TARGETDIR $PREFIX/config/agent_ros2_packages.txt $PREFIX/config/agent_uros_packages.repos
 
-rosdep install --os=ubuntu:noble --from-paths $TARGETDIR -i $TARGETDIR -y --skip-keys="$SKIP"
+rosdep install --os=ubuntu:jammy --from-paths $TARGETDIR -i $TARGETDIR -y --skip-keys="$SKIP"
diff --git a/scripts/create_firmware_ws.sh b/scripts/create_firmware_ws.sh
index 59cc5c5..48706ba 100755
--- a/scripts/create_firmware_ws.sh
+++ b/scripts/create_firmware_ws.sh
@@ -45,6 +45,12 @@ else
     PLATFORM=generic
 fi
 
+if [ $# -ge 3 ]; then
+    OPTION=$3
+else
+    OPTION=""
+fi
+
 # Checking if firmware exists
 if [ -d $FW_TARGETDIR ]; then
     echo "Firmware already created. Please delete $FW_TARGETDIR folder if you want a fresh installation."
@@ -86,21 +92,22 @@ pushd $FW_TARGETDIR >/dev/null
     # Creating dev directory
     mkdir $DEV_WS_DIR
 
-    if [ $RTOS != "host" ]; then
+    if [ "$RTOS" != "host" ] && [ "$PLATFORM" != "host" ] ; then
         ros2 run micro_ros_setup create_ws.sh $DEV_WS_DIR $PREFIX/config/$RTOS/dev_ros2_packages.txt \
             $PREFIX/config/$RTOS/dev_uros_packages.repos
-        rosdep install --os=ubuntu:noble -y --from-paths $DEV_WS_DIR -i $DEV_WS_DIR --rosdistro $ROS_DISTRO --skip-keys="$SKIP"
+        rosdep install --os=ubuntu:jammy -y --from-paths $DEV_WS_DIR -i $DEV_WS_DIR --rosdistro $ROS_DISTRO --skip-keys="$SKIP"
 
          # Creating mcu directory
         mkdir mcu_ws
-        ros2 run micro_ros_setup create_ws.sh mcu_ws $PREFIX/config/client_ros2_packages.txt $PREFIX/config/$RTOS/$TARGET_FOLDER/client_uros_packages.repos
+        ros2 run micro_ros_setup create_ws.sh mcu_ws $PREFIX/config/client_ros2_packages.txt \
+	     $PREFIX/config/$RTOS/$TARGET_FOLDER/client_uros_packages.repos
         cp $PREFIX/config/$RTOS/$TARGET_FOLDER/client-colcon.meta mcu_ws/colcon.meta || :
     fi
 popd >/dev/null
 
 # build the dev_ws
 . $(dirname $0)/clean_env.sh
-if [ $RTOS != "host" ]; then
+if [ "$RTOS" != "host" ] && [ "$PLATFORM" != "host" ] ; then
     pushd $FW_TARGETDIR/$DEV_WS_DIR >/dev/null
         colcon build
         set +o nounset
@@ -110,8 +117,7 @@ if [ $RTOS != "host" ]; then
 fi
 
 # Install dependecies for specific platform
-rosdep install --os=ubuntu:noble -y --from-paths $PREFIX/config/$RTOS/$TARGET_FOLDER -i $PREFIX/config/$RTOS/$TARGET_FOLDER --rosdistro $ROS_DISTRO --skip-keys="$SKIP"
+rosdep install --os=ubuntu:jammy -y --from-paths $PREFIX/config/$RTOS/$TARGET_FOLDER -i $PREFIX/config/$RTOS/$TARGET_FOLDER --rosdistro $ROS_DISTRO --skip-keys="$SKIP"
 
 # Creating specific firmware folder
 . $PREFIX/config/$RTOS/$TARGET_FOLDER/create.sh
-
-- 
2.43.0

